// ----- MODULE-BASE ----------------------------
// ----- FUNCTIONS / MIXIN ----------------------
@function max-value($list) {
	$max-value: 0;
	@each $item in $list {
		@if ($item > $max-value) {
			$max-value: $item;
		}
	}
	@return $max-value;
}
@function check-columns($list) {
	$columns-values: ();
	@each $item in $list {
		@if (index($columns-values, $item) == null) {
			$columns-values: append($columns-values, $item);
		}
	}
	@return $columns-values;
}
@mixin clearfix {
	&::after {
		display: table;
		clear: both;
		content: '';
	}
}
// ----- BOX-SIZING -----------------------------
html {
	box-sizing: border-box;
}
*,
*::before,
*::after {
	box-sizing: inherit;
}
// ----- HELPERS-CLEARFIX -----------------------
@if ($helper-clearfix) {
	.#{$helper-clearfix-class} {
		@include clearfix;
	}
}
// ----- DEBUG ----------------------------------
@if ($debug) {
	$debug-columns: if(length($grid-columns) > 1, max-value($grid-columns), abs($grid-columns));
	#{$debug-class} {
		$debug-width: (100 / $debug-columns) + '%';
		position: relative;
		&::after {
			display: block;
			position: fixed;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			width: 100%;
			max-width: $wrapper-max-width;
			height: 100%;
			margin: 0 auto;
			background: repeating-linear-gradient(90deg, map-get($debug-settings, background-column) 0, map-get($debug-settings, background-column) calc(#{$debug-width} - #{$grid-gutter}), map-get($debug-settings, background-gutter) calc(#{$debug-width} - #{$grid-gutter}), map-get($debug-settings, background-gutter) calc(#{$debug-width} + ( #{$grid-gutter} / #{$debug-columns} ))); //grid nomargin
			content: '';
			z-index: -1;
			@if ($wrapper-gutter != 0) {
				padding: 0 $wrapper-gutter;
				background-origin: content-box;
			}
		}
	}
}
// ----- CLASS-GRID -----------------------------
.#{$wrapper-class} {
	width: 100%;
	@if ($wrapper-gutter != 0) {
		padding: 0 $wrapper-gutter;
	} @else {
		padding: 0;
	}
	@if ($wrapper-max-width != 100%) {
		max-width: $wrapper-max-width;
		margin: 0 auto;
	}
}
// ----- CLASS-ROW ------------------------------
.#{$grid-class-row} {
	margin-left: -$grid-gutter;
	@if ($grid-flexbox) {
		display: flex;
		flex-flow: row wrap;
		&-reverse {
			flex-wrap: wrap-reverse;
		}
		&-top {
			align-items: flex-start;
		}
		&-middle {
			align-items: center;
		}
		&-bottom {
			align-items: flex-end;
		}
		&-left {
			justify-content: flex-start;
		}
		&-center {
			justify-content: center;
		}
		&-right {
			justify-content: flex-end;
		}
		&-around {
			justify-content: space-around;
		}
		&-between {
			justify-content: space-between;
		}
	} @else {
		@include clearfix;
	}
}
// ----- CLASS-COLUMN ---------------------------
[class*="#{$grid-class-column}"] {
	min-height: 1px;
	padding-left: $grid-gutter;
	@if ($grid-flexbox) {
		flex: 1 1 100%;
		max-width: 100%;
	} @else {
		width: 100%;
		float: left;
	}
}
.#{$grid-class-column} {
	&center {
		margin-right: auto;
		margin-left: auto;
		@if ($grid-flexbox) {
			justify-content: center;
		} @else {
			float: none;
		}
	}
	@if ($grid-flexbox) {
		&content {
			flex: 0 0 auto;
		}
		&auto {
			flex: 1 1 0%;
		}
		&top {
			align-self: flex-start;
		}
		&middle {
			align-self: center;
		}
		&bottom {
			align-self: flex-end;
		}
	}
}

// ----- GRID-BASE ------------------------------
@if (length($grid-columns) == 1) and ($grid-columns < 0) {
	@for $i from 1 through abs($grid-columns) {
		.#{$grid-class-column}#{$i} {
			@if ($grid-flexbox) {
				flex-basis: ($i / abs($grid-columns)) * 100%;
				max-width: ($i / abs($grid-columns)) * 100%;
			} @else {
				width: ($i / abs($grid-columns)) * 100%;
			}
		}
	}
} @else {
	@each $column-value in check-columns($grid-columns) {
		.#{$grid-class-column}#{$column-value} {
			@if ($grid-flexbox) {
				flex-basis: (100% / max-value($grid-columns)) * $column-value;
				max-width: (100% / max-value($grid-columns)) * $column-value;
			} @else {
				width: (100% / max-value($grid-columns)) * $column-value;
			}
		}
	}
}
// ----- GRID-GUTTER ----------------------------
@each $key, $value in $helper-gutter-values {
	.#{$helper-gutter-class}#{$key} {
		margin-left: -$value;
		> [class*="#{$grid-class-column}"] {
			padding-left: $value;
		}
	}
}
