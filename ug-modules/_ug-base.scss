// ----- HELPER FUNCTIONS ---------------------------------
@function ug-helper-trim($class) {
    $index: -1;
    $counter: 0;
    @while str-slice($class, $index) == ' ' or str-slice($class, $index) == '-' or str-slice($class, $index) == '_' {
        $counter: $counter + 1;
        $index: $index - 1;
    }
    @return str-slice($class, 1, str-length($class) - $counter);
}

// ----- BASE-DEBUG ---------------------------------------
@if $ug-debug {
    .#{$ug-debug-class} {
        @include ug-debug;
    }
}

// ----- BASE-CLEARFIX ------------------------------------
@if $ug-helper-clearfix {
    .#{$ug-helper-clearfix-class} {
        @include ug-clearfix;
    }
}

// ----- BASE-WRAPPER -------------------------------------
.#{$ug-grid-class-container} {
    @include ug-wrapper($gutter-wrapper: $ug-grid-wrapper-gutter);
}

// ----- BASE-ROW -----------------------------------------
.#{$ug-grid-class-row} {
    @include ug-row;
}

// ----- BASE-COLUMN --------------------------------------
%extend-col {
    @include ug-col($extend: true);
}

@if $ug-helper-attr-selector {
    [class*="#{ug-helper-trim($ug-grid-class-column)}"] {
        @include ug-col;
        @if $ug-debug {
            position: relative;
            &:hover {
                &::after {
                    position: absolute;
                    top: 0;
                    right: 0;
                    padding: ug-rem(4 8);
                    background-color: rgba(#000, 0.8);
                    color: rgba(#eee, 1);
                    white-space: nowrap;
                    content: attr(class);
                }
            }
        }
    }
} @else {
    @if length($ug-grid-columns) == 1 and $ug-grid-columns < 0 {
        @for $i from 1 through abs($ug-grid-columns) {
            .#{$ug-grid-class-column}#{$i} {
                @extend %extend-col;
            }
        }
        @if $ug-grid-responsive {
            @each $key, $value in $ug-grid-breakpoints {
                @for $i from 1 through abs($ug-grid-columns) {
                    .#{$ug-grid-class-column}#{$key}#{$i} {
                        @extend %extend-col;
                    }
                }
            }
        }
    } @else {
        @each $column-value in $ug-grid-columns {
            .#{$ug-grid-class-column}#{$column-value} {
                @extend %extend-col;
            }
        }
    }
}

// ----- BASE-GRID ----------------------------------------
@if length($ug-grid-columns) == 1 and $ug-grid-columns < 0 {
    @for $i from 1 through abs($ug-grid-columns) {
        .#{$ug-grid-class-column}#{$i} {
            @if not $ug-helper-attr-selector {
                @extend %extend-col;
            }
        }
        .#{$ug-grid-class-column}#{$i} {
            @include ug-width(($i / abs($ug-grid-columns)) * 100%)
        }
    }
} @else {
    @each $column-value in $ug-grid-columns {
        .#{$ug-grid-class-column}#{$column-value} {
            @if not $ug-helper-attr-selector {
                @extend %extend-col;
            }
            @include ug-width((100% / ug-max-value($ug-grid-columns)) * $column-value);
        }
    }
}

@if $ug-grid-flexbox {
    .#{$ug-grid-class-column}auto {
        @include ug-col-auto($ug-grid-gutter);
    }
    .#{$ug-grid-class-column}expand {
        @include ug-col-expand($ug-grid-gutter);
    }
}

// ----- BASE-CUSTOM GUTTERS ------------------------------
@if $ug-grid-gutter-type == 'margin' {
    @each $key, $value in $ug-helper-gutter-values {
        .#{$ug-helper-gutter-class}#{$key} {
            margin-left: ug-rem(-$value);
            > [class*="#{ug-helper-trim($ug-grid-class-column)}"] {
                padding-left: ug-rem($value);
            }
        }
        @if $ug-module-block {
            .#{$ug-helper-gutter-class}#{$key}[class*="#{ug-helper-trim($ug-module-block-class)}"] > * {
                padding-left: ug-rem($value);
            }
        }
    }
}
